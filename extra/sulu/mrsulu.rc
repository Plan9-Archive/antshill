#!/bin/rc
# prototype proof of concept timewarping rc script

if(! test -e $1){
	echo no sim file found
	exit
}

. $1

fn parsemsg{
	vrt=$msg(1)
	vst=$msg(2)
	rcvr=$msg(3)
	sndr=$msg(4)
	sign=$msg(5)
	gid=$msg(6)
	body=$msg(7-)
}

fn cancelinq{
	for(i in `{ls inq}){
		chksign=`{cat $i}
		if(~ $chksign(5) neg){
			for(j in `{ls inq}){
				chkmatch=`{cat $j}
				if(~ $chkmatch(5) pos){
					if(~ $chkmatch(6) $chksign(6)){
						echo removing $i $j
						rm $i
						rm $j
					}
				}
			}
		}
	}
}

if(! test -e /tmp/$mynum){
	mkdir /tmp/$mynum
	mkdir /tmp/$mynum/inq
	mkdir /tmp/$mynum/antiq
}
cd /tmp/$mynum
rm state.*
rm inq/*
rm antiq/*
dim=`{echo -n $mynum |wc -c}
cvt=0
siminit
echo $state >state.$cvt
if(~ $#simend 0)
	simend=109
if(~ $#simlimit 0)
	simlimit=90
sleep 30

while(test $cvt -lt $simend){
	cvt=`{echo $cvt + 1 |hoc}
	port=`{echo $cvt - 1 |hoc}
	if(test $port -ge $dim)
		port=`{echo $port^' % '^$dim |hoc}
	if(test $cvt -gt $simlimit)
		port=$dim
	outmsg=($cvt $cvt $port $mynum pos $mynum.$cvt $sendout)
	antimsg=($cvt $cvt $port $mynum neg $mynum.$cvt $sendout)
	prevmsg=`{cat antiq/$cvt >[2] /dev/null} 
	if(test $#prevmsg -gt 5){
		if(! ~ $"antimsg $"prevmsg){
			echo $prevmsg >>/n/cube/$port
			echo $outmsg >>/n/cube/$port
			echo $antimsg >antiq/$cvt
		}
	}
	if(! test $#prevmsg -gt 5){
		echo $outmsg >>/n/cube/$port
		echo $antimsg >antiq/$cvt
	}
	echo $state >state.$cvt
	msg=`{read}
	if(test $#msg -gt 5){
		parsemsg
		echo $msg >inq/$vrt
		if(test $vrt -lt $cvt){
			cvt=$vrt
			if(test -e state.$cvt)
				state=`{cat state.$cvt >[2] /dev/null}
		}
		cancelinq
	}
	updatestate
	if(test -e inq/$cvt){
		msg=`{cat inq/$cvt >[2] /dev/null}
		parsemsg
		if(~ $sign pos)
			msgproc
	}
	tickstate
}
